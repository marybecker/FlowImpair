geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_discrete(breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_discrete(limits=c(1:7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))
class(findex$`01118300`)
class(findex$`01188000`)
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")
gage<-'01188000'
gfindex<- findex[,c(gage,'sdate')]
gfindex<-gfindex[which(gfindex[1]!="NA"),]
gfindex[1]<-gfindex$gage
gfindex[1:10,]
gage<-'01188000'
gfindex<- findex[,c(gage,'sdate')]
gfindex[1:10,]
gfindex<-gfindex[which(gfindex[1]!="NA"),]
colnames(gfindex)[1]<-"gage"
gfindex[1:10,]
gage<-'01188000'
gfindex<- findex[,c(gage,'sdate')]
gfindex<-gfindex[which(gfindex[1]!="NA"),]
colnames(gfindex)[1]<-"gage"
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(gfindex$sdate)-30
xend <- max(gfindex$sdate)+30
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(gfindex,range(sdate)))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)
xstart
xend
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))
rects <- data.frame(ystart = c(0,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_hline(yintercept=c(3,5))
ggplot()+
geom_point(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_hline(yintercept=c(3,5))
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_hline(yintercept=c(3,5))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend))
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
#######Average SF Index Least Disturbed#####################
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(findex$sdate)-30
xend <- max(findex$sdate)+30
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
class(rects$yend)
class(rects$ystart)
class(xstart)
class(xend)
class(gfindex$sdate)
class(gfindex$gage)
p<- ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_hline(yintercept=c(3,5))
+ geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_hline(yintercept=c(3,5))+
geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(gfindex,range(sdate)))
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(gfindex,range(sdate)))
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Bunnell Brook 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Dry","Normal","Wet"))+
geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(gfindex,range(sdate)))
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
#######Average SF Index Least Disturbed#####################
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(findex$sdate)-30
xend <- max(findex$sdate)+30
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
gage<-'01188000'
gfindex<- findex[,c(gage,'sdate')]
gfindex<-gfindex[which(gfindex[1]!="NA"),]
colnames(gfindex)[1]<-"gage"
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(gfindex$sdate)-30
xend <- max(gfindex$sdate)+30
ggplot()+
geom_line(data=gfindex, aes(sdate,gage))+
labs(y="",x="",title="Flow Conditions At Bunnell Brook 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(gfindex,range(sdate)))
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(findex$sdate)-30
xend <- max(findex$sdate)+30
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
library(ggplot2)
library(lubridate)
library(reshape2)
setwd("P:/Projects/GitHub_Prj/FlowImpair")
indexgage<-read.csv("usgsindexgage.csv",header=TRUE)
indexgage$SiteNumber<-paste("0",indexgage$SiteNumber,sep="")
######Function to read in data from USGS data service correctly###############################
######assume one header line and tab delimited structure, with # as a comment out to skip#####
parse_fstat<-function(fstat_lines,skip='#',delim='\t'){
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+2:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-1,1:length(r)]<-r;
}
D
}
#character string from right
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
get_sfindex<-function(site,base_url,start_date,end_date,parameterCd,statCd){
flowparts <- c(base_url,'/dv/?format=rdb',
'&sites=',       site,
'&startDT=',     start_date,
'&endDT=',       end_date,
'&statCd=', statCd,
'&parameterCd=', parameterCd,
'&siteType=',    'ST',
'&siteStatus=',   'all');
flow_url<-paste(flowparts,sep='',collapse='');
flow<-parse_fstat(readLines(flow_url))
flow<-flow[which(flow$agency_cd!="NA"),]
colnames(flow)[4]<-"q"
#EXAMPLE URL FOR TEST
#flow_url<-'https://waterservices.usgs.gov/nwis/dv/?format=rdb&sites=01187300&
#startDT=1997-01-01&endDT=2017-05-01&statCd=00003&parameterCd=00060&siteType=ST&siteStatus=all'
fstat_parts <- c(base_url,'/stat/?format=rdb,1.0',
'&sites=',      site,
'&statReportType=','daily',
'&statTypeCd=',      'all',
'&parameterCd=',   parameterCd);
#EXAMPLE URL FOR TEST
#fstat_url<- 'https://waterservices.usgs.gov/nwis/stat/?format=rdb,1.0&sites=01118300
#&statReportType=daily&statTypeCd=all&parameterCd=00060';
fstat_url<-paste(fstat_parts,sep='',collapse='');
fstat<-parse_fstat(readLines(fstat_url));
fstat$m<- paste("0",fstat$month_nu,sep="")
fstat$m<- substrRight(fstat$m,2)
fstat$d<- paste("0",fstat$day_nu,sep="")
fstat$d<- substrRight(fstat$d,2)
fstat$md<- paste(fstat$m,"-",fstat$d,sep="")
flow$md<- substrRight(flow$datetime,5)
fstat<-fstat[which(fstat$parameter_cd==parameterCd),]
flowstat<- merge(flow,fstat,by="md",all.x=TRUE)
flowstat<- transform(flowstat,q=as.numeric(q),max_va=as.numeric(max_va),min_va=as.numeric(min_va),
p10_va=as.numeric(p10_va),p25_va=as.numeric(p25_va),p75_va=as.numeric(p75_va),
p90_va=as.numeric(p90_va))
# The seven percentile classes are defined as follows:
#
# 1 = Lowest ever for the date at a streamgage
# 2 = < 10th percentile
# 3 = 10th to 24th percentile
# 4 = 25th to 75th percentile
# 5 = 76th to 90th percentile
# 6 = > 90th percentile
# 7 = Highest ever for the date at a streamgage
flowstat$index<- ifelse(flowstat$q==flowstat$min_va,1,
ifelse(flowstat$q<=flowstat$p10_va &
flowstat$q>flowstat$min_va,2,
ifelse(flowstat$q>flowstat$p10_va &
flowstat$q<=flowstat$p25_va,3,
ifelse(flowstat$q>flowstat$p25_va &
flowstat$q<=flowstat$p75,4,
ifelse(flowstat$q>flowstat$p75 &
flowstat$q<=flowstat$p90,5,
ifelse(flowstat$q>flowstat$p90 &
flowstat$q<flowstat$max_va,6,
ifelse(flowstat$q==flowstat$max_va,7,NA)))))))
sfindex<-data.frame(flowstat$datetime,flowstat$index)
colnames(sfindex)<-c("datetime",site)
sfindex #return the sfindex
}
base_url    <-'https://waterservices.usgs.gov/nwis';
start_date  <- '2017-01-01';
end_date    <- '2018-01-01';
parameterCd<-'00060';
statCd      <-'00003';
D<-list(); #our empty list of list data sructure
for(i in 1:dim(indexgage)[1]){#read out all the individual data tables
site<-indexgage[i,1]
sfindex<-get_sfindex(site,base_url,start_date,end_date,parameterCd,statCd);
write.csv(sfindex,paste("data/",site,".csv",sep=""),row.names=FALSE)
for(j in 1:dim(sfindex)[1]){ #read through the rows and load data into D
d<-as.character(sfindex[j,'datetime']);
v<-sfindex[j,site];
if(is.null(D[[d]])){ #d is not in D =>(add a new datetime key and a new key site and index value v)
D[[d]]<-list();
D[[d]][[site]]<-v;
}else{               #d is in D =>(add a new key site and index value v)
D[[d]][[site]]<-v;
}
}
}
#[1]build a new empty dataframe E
n<-length(D);
m<- dim(indexgage)[1];
E<-matrix(NA,nrow=n,ncol=m);
dates<-sort(names(D))
colnames(E)<-indexgage[,1];
rownames(E)<-dates;
#[2]read from the D and write into E
for(i in 1:n){#for each datetime
sites <- names(D[[dates[i]]]); #sites in that datetime
for(j in 1:length(D[[dates[i]]])){#for each site
E[i,sites[j]]<-D[[dates[i]]][[j]];
}
}
findex<-as.data.frame(E)
findex[1:10,]
findex<-as.data.frame(E)
findex$gagecnt<-(rowSums(!is.na(findex)))-1
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
findex[1:10,]
base_url    <-'https://waterservices.usgs.gov/nwis';
start_date  <- '2017-01-01';
end_date    <- '2018-01-01';
parameterCd<-'00060';
statCd      <-'00003';
D<-list(); #our empty list of list data sructure
for(i in 1:dim(indexgage)[1]){#read out all the individual data tables
site<-indexgage[i,1]
sfindex<-get_sfindex(site,base_url,start_date,end_date,parameterCd,statCd);
write.csv(sfindex,paste("data/",site,".csv",sep=""),row.names=FALSE)
for(j in 1:dim(sfindex)[1]){ #read through the rows and load data into D
d<-as.character(sfindex[j,'datetime']);
v<-sfindex[j,site];
if(is.null(D[[d]])){ #d is not in D =>(add a new datetime key and a new key site and index value v)
D[[d]]<-list();
D[[d]][[site]]<-v;
}else{               #d is in D =>(add a new key site and index value v)
D[[d]][[site]]<-v;
}
}
}
#[1]build a new empty dataframe E
n<-length(D);
m<- dim(indexgage)[1];
E<-matrix(NA,nrow=n,ncol=m);
dates<-sort(names(D))
colnames(E)<-indexgage[,1];
rownames(E)<-dates;
#[2]read from the D and write into E
for(i in 1:n){#for each datetime
sites <- names(D[[dates[i]]]); #sites in that datetime
for(j in 1:length(D[[dates[i]]])){#for each site
E[i,sites[j]]<-D[[dates[i]]][[j]];
}
}
findex$index<-rowMeans(findex,na.rm=TRUE)     #only run if first time run, if index exists will include in avg
findex<-as.data.frame(E)
findex$gagecnt<-(rowSums(!is.na(findex)))-1
class(findex$`01118300`)
class(findex$`01208990`)
base_url    <-'https://waterservices.usgs.gov/nwis';
start_date  <- '2017-01-01';
end_date    <- '2018-01-01';
parameterCd<-'00060';
statCd      <-'00003';
D<-list(); #our empty list of list data sructure
for(i in 1:dim(indexgage)[1]){#read out all the individual data tables
site<-indexgage[i,1]
sfindex<-get_sfindex(site,base_url,start_date,end_date,parameterCd,statCd);
write.csv(sfindex,paste("data/",site,".csv",sep=""),row.names=FALSE)
for(j in 1:dim(sfindex)[1]){ #read through the rows and load data into D
d<-as.character(sfindex[j,'datetime']);
v<-sfindex[j,site];
if(is.null(D[[d]])){ #d is not in D =>(add a new datetime key and a new key site and index value v)
D[[d]]<-list();
D[[d]][[site]]<-v;
}else{               #d is in D =>(add a new key site and index value v)
D[[d]][[site]]<-v;
}
}
}
#[1]build a new empty dataframe E
n<-length(D);
m<- dim(indexgage)[1];
E<-matrix(NA,nrow=n,ncol=m);
dates<-sort(names(D))
colnames(E)<-indexgage[,1];
rownames(E)<-dates;
#[2]read from the D and write into E
for(i in 1:n){#for each datetime
sites <- names(D[[dates[i]]]); #sites in that datetime
for(j in 1:length(D[[dates[i]]])){#for each site
E[i,sites[j]]<-D[[dates[i]]][[j]];
}
}
findex<-as.data.frame(E)
findex$index<-rowMeans(findex,na.rm=TRUE)     #only run if first time run, if index exists will include in avg
findex$gagecnt<-(rowSums(!is.na(findex)))-1  #only run -1 if first time run, if gagecnt already exists than -2
findex[1:10,]
write.csv(findex,"findex2017.csv")
E
flowstat[1:10,]
sfindex[1:10,]
names(findex)
findex[1:10,]
findexlng<-melt(findex,id.vars="gagecnt")
findexlng[1:10,]
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
findex[1:10,]
findexlng<-melt(findex,id.vars=c("sdate","gagecnt"))
findexlng[1:10,]
findexlng[4000:4010,]
write.csv(findexlng,"findexlng2017.csv")
findexRG<- findex[which(findex$sdate >= 2017-07-01 & findex$sdate <= 2017-10-31),]
dim(findexRG)
findexRG[1:10,]
findexRG<- findex
findexRG$month<- substr(findexRG$sdate,6,7)
findexRG[1:10,]
findexRG[330:360,]
findexRG<- findexRG[which(findexRG$month==c("07","08","09","10")),]
findexRG<- findexRG[which(findexRG$month=="07"|findexRG$month=="08"|
findexRG$month=="09"|findexRG$month=="10"),]
dim(findexRG)
findexRG
findex<-as.data.frame(E)
findex$index<-rowMeans(findex,na.rm=TRUE)     #only run if first time run, if index exists will include in avg
findex$gagecnt<-(rowSums(!is.na(findex)))-1  #only run -1 if first time run, if gagecnt already exists than -2
##############################################################################################
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
findexRG<- findex
findexRG$month<- substr(findexRG$sdate,6,7)
findex[50:100,]
findexRG$month<- substr(findexRG$sdate,6,7)
findex[50:100,]
findexRG[50:100,]
findexRG[100:150,]
findexRG[150:200,]
findexRG$month<- substr(findexRG$sdate,6,7)
findexRG$month=="09"|findexRG$month=="10"),]
findexRG<- findexRG[which(findexRG$month=="07"|findexRG$month=="08"|
findexRG$month=="09"|findexRG$month=="10"),]
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("blue","purple","green"))
xstart <- min(findexRG$sdate)-30  ##Specified for plot to ensure rects coverage
xend <- max(findexRG$sdate)+30
p<- ggplot()+
geom_line(data=findexRG, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages
during Rearing and Growth Bioperiod 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(2,4,6),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findexRG, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages
during Rearing and Growth Bioperiod 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(2,4,6),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findexRG,range(sdate)))
fobs<-read.csv("data/TrailCam_FlowObs2017.csv",header=TRUE)
names(fobs)
setwd("P:/Projects/GitHub_Prj/FlowImpair")
library(ggplot2)
library(lubridate)
library(grid)
library(plyr)
library(reshape2)
fobs$Date<-make_date(year=fobs$Year,month=fobs$Month,day=fobs$Day)
fobs<- fobs[which(fobs$Month==7 |fobs$Month==8| fobs$Month==9 | fobs$Month==10),]#RG Period Only
sites<- unique(fobs$STA_SEQ) ##list of stations
site.name<-fobs[,1:2]
site.name<-unique(site.name[c("STA_SEQ","Station_Name")])
colnames(site.name)<-c("site","SName")
flowmetric<- matrix(ncol=22,nrow=length(sites))
for (i in 1:length(sites)){
site <- fobs[which(fobs$STA_SEQ==sites[i]),]
site$DurObs<-ifelse(site$Obs>3,1,0)
##Magnitude####
MA<- mean(site$Obs)
M50<- quantile(site$Obs,0.5)
M25<- quantile(site$Obs,0.25)
M75<- quantile(site$Obs,0.75)
Sept<-site[which(site$Month==9),]
MASept<- mean(Sept$Obs)
M50Sept<- quantile(Sept$Obs,0.5)
###Duration####
dur<-rle(site$Obs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==1] ## the run with a particular value 1
D1<- mean(durvalue)  ##the average duration of days
dur<-rle(site$Obs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==2] ## the run with a particular value 1
D2<- mean(durvalue)  ##the average duration of days
dur<-rle(site$Obs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==3] ## the run with a particular value 1
D3<- mean(durvalue)  ##the average duration of days
dur<-rle(site$Obs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==4] ## the run with a particular value 1
D4<- mean(durvalue)  ##the average duration of days
dur<-rle(site$DurObs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==0] ## the run with a particular value 1
DL<- mean(durvalue)  ##the average duration of days
dur<-rle(site$DurObs)  ##calculate the total runs in a sequence
durvalue<- dur$lengths[dur$values==1] ## the run with a particular value 1
DN<- mean(durvalue)  ##the average duration of days
###Frequency####
F1<- nrow(site[which(site$Obs==1),])
F2<- nrow(site[which(site$Obs==2),])
F3<- nrow(site[which(site$Obs==3),])
F4<- nrow(site[which(site$Obs==4),])
FL<- nrow(site[which(site$Obs<4),])
FN<- nrow(site[which(site$Obs>3),])
###Frequency compared to reference gages##
G4F1<- nrow(site[which(site$index>3&site$Obs==1),])
G4F2<- nrow(site[which(site$index>3&site$Obs==2),])
G4F3<- nrow(site[which(site$index>3&site$Obs==3),])
G4FL<- nrow(site[which(site$index>4&site$Obs<4),])
flowmetric[i,]<- rbind(MA,M50,M25,M75,MASept,M50Sept,
D1,D2,D3,D4,DL,DN,
F1,F2,F3,F4,FL,FN,
G4F1,G4F2,G4F3,G4FL)
}
flowmetric<- as.data.frame(flowmetric,row.names=sites)
colnames(flowmetric)<-c("MA","M50","M25","M75","MASept","M50Sept",
"D1","D2","D3","D4","DL","DN",
"F1","F2","F3","F4","FL","FN",
"G4F1","G4F2","G4F3","G4FL")
flowmetric
