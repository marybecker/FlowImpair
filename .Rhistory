theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
p18<- ggplot(flowmetric,aes(x=SName,y=FN))+
geom_bar(stat="identity")+
labs(title="Count of Connected, Full or Flood Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
p23<- ggplot(flowmetric,aes(x=SName,y=FPL))+
geom_bar(stat="identity")+
labs(title="Percent of Disconnected, No Flow or Dry Days - R&G",y="Percent of Days - R&G")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
##Frequency compared to reference gages Plots##
p19<- ggplot(flowmetric,aes(x=SName,y=G4F1))+
geom_bar(stat="identity")+
labs(title="Count of Dry Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
p20<- ggplot(flowmetric,aes(x=SName,y=G4F2))+
geom_bar(stat="identity")+
labs(title="Count of No Flow Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
p21<- ggplot(flowmetric,aes(x=SName,y=G4F3))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
p22<- ggplot(flowmetric,aes(x=SName,y=G4FL))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected, No Flow or Dry Days - Reference Gages > 25th Percentile Flow",
y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(2)))
#####MULTI-Plot Function##############
#######################################
#call this with p1,p,2,... cols=4
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
#########################################
pdf(file="Magnitudeplots1.pdf",width=11,height=8)
multiplot(p1,p2,p3,cols=1)
dev.off()
pdf(file="Magnitudeplots2.pdf",width=11,height=8)
multiplot(p4,p5,p6,cols=1)
dev.off()
pdf(file="Durationplots1.pdf",width=11,height=8)
multiplot(p7,p8,p9,cols=1)
dev.off()
pdf(file="Durationplots2.pdf",width=11,height=8)
multiplot(p10,p11,p12,cols=1)
dev.off()
pdf(file="Frequencyplots1.pdf",width=11,height=8)
multiplot(p13,p14,p15,cols=1)
dev.off()
pdf(file="Frequencyplots2.pdf",width=11,height=8)
multiplot(p16,p17,cols=1)
dev.off()
pdf(file="Frequencyplots3.pdf",width=11,height=8)
multiplot(p18,p23,cols=1)
dev.off()
pdf(file="GageFrequencyplots1.pdf",width=11,height=8)
multiplot(p19,p20,cols=1)
dev.off()
pdf(file="GageFrequencyplots2.pdf",width=11,height=8)
multiplot(p21,p22,cols=1)
dev.off()
p1<- ggplot(flowmetric,aes(x=SName,y=MA))+
geom_bar(stat="identity")+
labs(title="Average Flow Category - R&G",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p2<- ggplot(flowmetric,aes(x=SName,y=M50))+
geom_bar(stat="identity")+
labs(title="Median Flow Category - R&G",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p3<- ggplot(flowmetric,aes(x=SName,y=M25))+
geom_bar(stat="identity")+
labs(title="25th Percentile Flow Category - R&G",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p4<- ggplot(flowmetric,aes(x=SName,y=M75),axis.text=element_text(size=rel(0.75)))+
geom_bar(stat="identity")+
labs(title="75th Percentile Flow Category - R&G",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p5<- ggplot(flowmetric,aes(x=SName,y=MASept),axis.text=element_text(size=rel(0.75)))+
geom_bar(stat="identity")+
labs(title="Average September Flow Category",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p6<- ggplot(flowmetric,aes(x=SName,y=M50Sept),axis.text=element_text(size=rel(0.75)))+
geom_bar(stat="identity")+
labs(title="Median September Flow Category",y="Category")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
##Duration plots##
p7<- ggplot(flowmetric,aes(x=SName,y=D1))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive Dry Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p8<- ggplot(flowmetric,aes(x=SName,y=D2))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive No Flow Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p9<- ggplot(flowmetric,aes(x=SName,y=D3))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive Disconnected Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p10<- ggplot(flowmetric,aes(x=SName,y=D4))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive Connected Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p11<- ggplot(flowmetric,aes(x=SName,y=DL))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive Disconnected, No Flow or Dry Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p12<- ggplot(flowmetric,aes(x=SName,y=DN))+
geom_bar(stat="identity")+
labs(title="Mean Duration of Consecutive Connected, Full or Flood Days",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
##Frequency Plots######
p13<- ggplot(flowmetric,aes(x=SName,y=F1))+
geom_bar(stat="identity")+
labs(title="Count of Dry Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p14<- ggplot(flowmetric,aes(x=SName,y=F2))+
geom_bar(stat="identity")+
labs(title="Count of No Flow Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p15<- ggplot(flowmetric,aes(x=SName,y=F3))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p16<- ggplot(flowmetric,aes(x=SName,y=F4))+
geom_bar(stat="identity")+
labs(title="Count of Connected Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p17<- ggplot(flowmetric,aes(x=SName,y=FL))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected, No Flow or Dry Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p18<- ggplot(flowmetric,aes(x=SName,y=FN))+
geom_bar(stat="identity")+
labs(title="Count of Connected, Full or Flood Days - R&G",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p23<- ggplot(flowmetric,aes(x=SName,y=FPL))+
geom_bar(stat="identity")+
labs(title="Percent of Disconnected, No Flow or Dry Days - R&G",y="Percent of Days - R&G")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
##Frequency compared to reference gages Plots##
p19<- ggplot(flowmetric,aes(x=SName,y=G4F1))+
geom_bar(stat="identity")+
labs(title="Count of Dry Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p20<- ggplot(flowmetric,aes(x=SName,y=G4F2))+
geom_bar(stat="identity")+
labs(title="Count of No Flow Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p21<- ggplot(flowmetric,aes(x=SName,y=G4F3))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected Days - Reference Gages > 25th Percentile Flow",y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
p22<- ggplot(flowmetric,aes(x=SName,y=G4FL))+
geom_bar(stat="identity")+
labs(title="Count of Disconnected, No Flow or Dry Days - Reference Gages > 25th Percentile Flow",
y="Days")+
theme(axis.title.x=element_blank(),axis.text=element_text(size=rel(0.75)),
plot.title=element_text(size=rel(1)))
#####MULTI-Plot Function##############
#######################################
#call this with p1,p,2,... cols=4
multiplot <- function(..., plotlist=NULL, file, cols=1, layout=NULL) {
plots <- c(list(...), plotlist)
numPlots = length(plots)
if (is.null(layout)) {
# Make the panel
# ncol: Number of columns of plots
# nrow: Number of rows needed, calculated from # of cols
layout <- matrix(seq(1, cols * ceiling(numPlots/cols)),
ncol = cols, nrow = ceiling(numPlots/cols))
}
if (numPlots==1) {
print(plots[[1]])
} else {
grid.newpage()
pushViewport(viewport(layout = grid.layout(nrow(layout), ncol(layout))))
for (i in 1:numPlots) {
# Get the i,j matrix positions of the regions that contain this subplot
matchidx <- as.data.frame(which(layout == i, arr.ind = TRUE))
print(plots[[i]], vp = viewport(layout.pos.row = matchidx$row,
layout.pos.col = matchidx$col))
}
}
}
#########################################
pdf(file="Magnitudeplots1.pdf",width=11,height=8)
multiplot(p1,p2,p3,cols=1)
dev.off()
pdf(file="Magnitudeplots2.pdf",width=11,height=8)
multiplot(p4,p5,p6,cols=1)
dev.off()
pdf(file="Durationplots1.pdf",width=11,height=8)
multiplot(p7,p8,p9,cols=1)
dev.off()
pdf(file="Durationplots2.pdf",width=11,height=8)
multiplot(p10,p11,p12,cols=1)
dev.off()
pdf(file="Frequencyplots1.pdf",width=11,height=8)
multiplot(p13,p14,p15,cols=1)
dev.off()
pdf(file="Frequencyplots2.pdf",width=11,height=8)
multiplot(p16,p17,cols=1)
dev.off()
pdf(file="Frequencyplots3.pdf",width=11,height=8)
multiplot(p18,p23,cols=1)
dev.off()
pdf(file="GageFrequencyplots1.pdf",width=11,height=8)
multiplot(p19,p20,cols=1)
dev.off()
pdf(file="GageFrequencyplots2.pdf",width=11,height=8)
multiplot(p21,p22,cols=1)
dev.off()
library(ggplot2)
library(lubridate)
library(reshape2)
setwd("/Users/tbecker/Documents/GitHub/FlowImpair")
indexgage<-read.csv("usgsindexgage.csv",header=TRUE)
indexgage$SiteNumber<-paste("0",indexgage$SiteNumber,sep="")
parse_fstat<-function(fstat_lines,skip='#',delim='\t'){
x<-1;
while(x<length(fstat_lines) && startsWith(fstat_lines[x],skip)){
x<-x+1;
}
header<-strsplit(fstat_lines[x],delim)[[1]];
D<-as.data.frame(matrix('',ncol=length(header),nrow=length(fstat_lines)-x),stringsAsFactors=F);
colnames(D)<-header;
for(i in x+2:length(fstat_lines)){
r<-strsplit(fstat_lines[i],delim)[[1]];
D[i-x-1,1:length(r)]<-r;
}
D
}
#character string from right
substrRight <- function(x, n){
substr(x, nchar(x)-n+1, nchar(x))
}
get_sfindex<-function(site,base_url,start_date,end_date,parameterCd,statCd){
flowparts <- c(base_url,'/dv/?format=rdb',
'&sites=',       site,
'&startDT=',     start_date,
'&endDT=',       end_date,
'&statCd=', statCd,
'&parameterCd=', parameterCd,
'&siteType=',    'ST',
'&siteStatus=',   'all');
flow_url<-paste(flowparts,sep='',collapse='');
flow<-parse_fstat(readLines(flow_url))
flow<-flow[which(flow$agency_cd!="NA"),]
colnames(flow)[4]<-"q"
#EXAMPLE URL FOR TEST
#flow_url<-'https://waterservices.usgs.gov/nwis/dv/?format=rdb&sites=01187300&
#startDT=1997-01-01&endDT=2017-05-01&statCd=00003&parameterCd=00060&siteType=ST&siteStatus=all'
fstat_parts <- c(base_url,'/stat/?format=rdb,1.0',
'&sites=',      site,
'&statReportType=','daily',
'&statTypeCd=',      'all',
'&parameterCd=',   parameterCd);
#EXAMPLE URL FOR TEST
#fstat_url<- 'https://waterservices.usgs.gov/nwis/stat/?format=rdb,1.0&sites=01118300
#&statReportType=daily&statTypeCd=all&parameterCd=00060';
fstat_url<-paste(fstat_parts,sep='',collapse='');
fstat<-parse_fstat(readLines(fstat_url));
fstat$m<- paste("0",fstat$month_nu,sep="")
fstat$m<- substrRight(fstat$m,2)
fstat$d<- paste("0",fstat$day_nu,sep="")
fstat$d<- substrRight(fstat$d,2)
fstat$md<- paste(fstat$m,"-",fstat$d,sep="")
flow$md<- substrRight(flow$datetime,5)
fstat<-fstat[which(fstat$parameter_cd==parameterCd),]
flowstat<- merge(flow,fstat,by="md",all.x=TRUE)
flowstat<- transform(flowstat,q=as.numeric(q),max_va=as.numeric(max_va),min_va=as.numeric(min_va),
p10_va=as.numeric(p10_va),p25_va=as.numeric(p25_va),p75_va=as.numeric(p75_va),
p90_va=as.numeric(p90_va))
# The seven percentile classes are defined as follows:
#
# 1 = Lowest ever for the date at a streamgage
# 2 = < 10th percentile
# 3 = 10th to 24th percentile
# 4 = 25th to 75th percentile
# 5 = 76th to 90th percentile
# 6 = > 90th percentile
# 7 = Highest ever for the date at a streamgage
flowstat$index<- ifelse(flowstat$q==flowstat$min_va,1,
ifelse(flowstat$q<=flowstat$p10_va &
flowstat$q>flowstat$min_va,2,
ifelse(flowstat$q>flowstat$p10_va &
flowstat$q<=flowstat$p25_va,3,
ifelse(flowstat$q>flowstat$p25_va &
flowstat$q<=flowstat$p75,4,
ifelse(flowstat$q>flowstat$p75 &
flowstat$q<=flowstat$p90,5,
ifelse(flowstat$q>flowstat$p90 &
flowstat$q<flowstat$max_va,6,
ifelse(flowstat$q==flowstat$max_va,7,NA)))))))
sfindex<-data.frame(flowstat$datetime,flowstat$index)
colnames(sfindex)<-c("datetime",site)
sfindex #return the sfindex
}
base_url    <-'https://waterservices.usgs.gov/nwis';
start_date  <- '2017-01-01';
end_date    <- '2018-01-01';
parameterCd<-'00060';
statCd      <-'00003';
D<-list(); #our empty list of list data sructure
for(i in 1:dim(indexgage)[1]){#read out all the individual data tables
site<-indexgage[i,1]
sfindex<-get_sfindex(site,base_url,start_date,end_date,parameterCd,statCd);
write.csv(sfindex,paste("data/",site,".csv",sep=""),row.names=FALSE)
for(j in 1:dim(sfindex)[1]){ #read through the rows and load data into D
d<-as.character(sfindex[j,'datetime']);
v<-sfindex[j,site];
if(is.null(D[[d]])){ #d is not in D =>(add a new datetime key and a new key site and index value v)
D[[d]]<-list();
D[[d]][[site]]<-v;
}else{               #d is in D =>(add a new key site and index value v)
D[[d]][[site]]<-v;
}
}
}
n<-length(D);
m<- dim(indexgage)[1];
E<-matrix(NA,nrow=n,ncol=m);
dates<-sort(names(D))
colnames(E)<-indexgage[,1];
rownames(E)<-dates;
#[2]read from the D and write into E
for(i in 1:n){#for each datetime
sites <- names(D[[dates[i]]]); #sites in that datetime
for(j in 1:length(D[[dates[i]]])){#for each site
E[i,sites[j]]<-D[[dates[i]]][[j]];
}
}
findex<-as.data.frame(E)
findex$index<-rowMeans(findex,na.rm=TRUE)     #only run if first time run, if index exists will include in avg
findex$gagecnt<-(rowSums(!is.na(findex)))-1  #only run -1 if first time run, if gagecnt already exists than -2
findex$sdate<- row.names(findex)
findex$sdate<- ymd(findex$sdate)
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("white","gray85","gray30"))
xstart <- min(findex$sdate)-30  ##Specified for plot to ensure rects coverage
xend <- max(findex$sdate)+30
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
findexRG<- findex
findexRG$month<- substr(findexRG$sdate,6,7)
findexRG<- findexRG[which(findexRG$month=="07"|findexRG$month=="08"|
findexRG$month=="09"|findexRG$month=="10"),]
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=ind))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=2))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=2))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=2))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
guides(fill=FALSE)
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=2))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=1))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=0.5))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=0.2))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=0.01))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=1))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
rects <- data.frame(ystart = c(-Inf,3,5),
yend = c(3,5,Inf),
cat = c("low flow","normal","high"),
col=c("white","gray30","gray85"))
xstart <- min(findex$sdate)-30  ##Specified for plot to ensure rects coverage
xend <- max(findex$sdate)+30
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=1))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(1,4,7),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
p<- ggplot()+
geom_line(data=findex, aes(sdate,index))+
geom_line(data=findexRG, aes(sdate,index,size=1))+
labs(y="",x="",title="Flow Conditions At 12 Least Disturbed Gages 2017")+
scale_y_continuous(limits=c(1,7),breaks=c(2,4,6),labels=c("Low","Normal","High"))+
theme(legend.position="none")
p + geom_rect(data=rects,aes(xmin=xstart,xmax=xend,
ymin = ystart, ymax = yend),alpha = 0.3,fill=rects$col)+
coord_cartesian(xlim=with(findex,range(sdate)))
